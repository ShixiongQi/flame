{{=<% %>=}}
---
apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: {{ .Release.Namespace }}-aggregator-<% taskId %>
  namespace: {{ .Release.Namespace }}
spec:
  template:
    metadata:
      # Configure Knative's autoscaling policy
      annotations:
        autoscaling.knative.dev/metric: "rps" # availabe autoscaler: RPS ("rps"), Concurrency ("concurrency"), Mu ("custom2")
        autoscaling.knative.dev/minScale: "1"
        autoscaling.knative.dev/maxScale: "1"
        autoscaling.knative.dev/target: "10"

    # activeDeadlineSeconds: <% maxWaitTime %>
    # ttlSecondsAfterFinished: 180 # supported from v1.21
    spec:
      # imagePullSecrets: # Is this field permitted by Knative?
        # - name: ecr-pull-secret
      containers:
        - args:
            - "--apiserver"
            - "{{ .Values.endpoint.apiserver }}"
            - "--notifier"
            - "{{ .Values.endpoint.notifier }}"
            {{ if .Values.insecure }}
            - "--insecure"
            {{ end }}
          command: ["/usr/bin/flamelet"]
          # command: ["/bin/bash", "-c", "--"]
          # args: ["while true; do sleep 30; done;"]
          image: <% imageLoc %>
          imagePullPolicy: Always
          name: {{ .Release.Namespace }}-aggregator

          ports:
          - name: h2c
            containerPort: {{ .Values.servicePort.agent }}
            containerPort: 8080

          resources: # TODO: Need to determine the right resource allocation for a single aggregator pod
            limits:
              memory: 2Gi
            requests:
              memory: 500Mi

          env:
            - name: LOG_LEVEL
              value: INFO
            - name: FLAME_TASK_ID
              value: <% taskId %>
            - name: FLAME_TASK_KEY
              value: <% taskKey %>
            {{ if ne .Values.s3Endpointurl "" }}
            - name: MLFLOW_S3_ENDPOINT_URL
              value: {{ .Values.s3EndpointUrl }}
            {{ end }}
            - name: AWS_ACCESS_KEY_ID
              value: {{ .Values.accessKeyId }}
            - name: AWS_SECRET_ACCESS_KEY
              value: {{ .Values.secretAccessKey }}
            # - name: AGGREGATOR_URL
            #  value: {{ .Values.aggregatorUrl }}
            - name: KN_INGRESS_IP
              value: {{ .Values.knIngressIp }}
            - name: KN_INGRESS_PORT
              value: "{{ .Values.knIngressPort }}"
            - name: ROLE
              value: "aggregator"
            - name: GIT_PYTHON_REFRESH
              value: "quiet"
            - name: TF_CPP_MIN_LOG_LEVEL
              value: "3"
      # restartPolicy: Never # This is not allowed by Knative

      # affinity:
        # Note: supported in v0.22.0, needs to be enabled in ConfigMap
        # https://github.com/knative/docs/blob/release-0.22/docs/serving/feature-flags.md
        # nodeAffinity:
          # preferredDuringSchedulingIgnoredDuringExecution:
          # - weight: 1
            # preference:
              # matchExpressions:
              # - key: "nvidia.com/gpu.count"
                # operator: Gt
                # values:
                # - "0"
<%={{ }}=%>
